#!/bin/bash

# Check if Homebrew is installed, and install it if necessary
if ! command -v brew &> /dev/null; then
    echo "Installing Homebrew..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

# Add Homebrew to the PATH if it's not already there
if [ "$(uname)" == "Darwin" ]; then

    if [ ! -f ~/.zshrc ]; then
        touch ~/.zshrc
    fi

    if ! grep -q 'eval "$(/opt/homebrew/bin/brew shellenv)"' ~/.zshrc; then
        (echo; echo 'eval "$(/opt/homebrew/bin/brew shellenv)"') >> ~/.zshrc
        eval "$(/opt/homebrew/bin/brew shellenv)"
    fi

    # Check if brew command is available
    if ! command brew -v &> /dev/null; then
        echo "Homebrew not found. Please check the Homebrew installation and PATH setup."
        exit 1
    fi

elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then

    # Add homebrew to path if it's not already added
    if ! grep -q 'export PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"' ~/.bashrc && ! grep -q 'export PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"' ~/.zshrc; then
        if [ -n "$ZSH_VERSION" ]; then
            echo 'export PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"' >> ~/.zshrc
        elif [ -n "$BASH_VERSION" ]; then
            echo 'export PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"' >> ~/.bashrc
        fi
    fi

    # Since --cask option is not supported in linux  using snap
    # to install applications.
    #
    # Install snap package.
    if ! command -v snap &> /dev/null; then
        sudo apt-get update
        sudo apt-get install -y snapd
    fi
fi

# Reload shell configuration to apply PATH changes
if [ -n "$ZSH_VERSION" ]; then
    source ~/.zshrc
elif [ -n "$BASH_VERSION" ]; then
    source ~/.bashrc
fi


if [ "$(uname)" == "Darwin" ]; then
    # Install Java if it's not already installed
    brew list --cask adoptopenjdk/openjdk/adoptopenjdk8 || brew install --cask adoptopenjdk/openjdk/adoptopenjdk8
else
    sudo snap install openjdk
fi


# Install Android Studio if it's not already installed
if [ "$(uname)" == "Darwin" ]; then
    if [ ! -d "/Applications/Android Studio.app" ]; then
        brew list --cask android-studio || brew install --cask android-studio
    fi
else
    if [ ! -d "/snap/bin/android-studio" ]; then
        sudo snap install android-studio --classic
    fi
fi

# Install Visual Studio Code if it's not already installed
if [ "$(uname)" == "Darwin" ]; then
    if [ ! -d "/Applications/Visual Studio Code.app" ]; then
        brew list --cask visual-studio-code || brew install --cask visual-studio-code
    fi
else
    if [ ! -d "/snap/bin/code" ]; then
        sudo snap install --classic code
    fi
fi

# Install FVM if it's not already installed
if ! brew list fvm &> /dev/null; then
    brew tap leoafarias/fvm
    brew install fvm
fi

# Set up the shell configuration file
if [ "$(uname)" == "Darwin" ]; then
    SHELL_CONFIG=~/.zshrc
else
    SHELL_CONFIG=~/.bashrc
fi

# Add FVM executable to the PATH in the shell configuration file
if ! grep -q 'export PATH="$PATH":"$HOME/.pub-cache/bin"' $SHELL_CONFIG; then
    if [ "$(uname)" == "Linux" ]; then
        echo 'export PATH="$PATH":"$HOME/.pub-cache/bin"' >> $SHELL_CONFIG
    fi
fi


# Add flutter path to shell configuration
if ! grep -q 'export PATH="$PATH":"$HOME/fvm/default/bin"' $SHELL_CONFIG; then
    if [ "$(uname)" == "Darwin" ]; then
        sed -i '' '1i\
        export PATH="$PATH":"$HOME/fvm/default/bin"' $SHELL_CONFIG
    else
        echo 'export PATH="$PATH":"$HOME/fvm/default/bin"' >> $SHELL_CONFIG
    fi
fi

# Activate changes to shell configuration file
source $SHELL_CONFIG

# Install Flutter stable if it's not already installed
fvm list | grep 'stable' || fvm install stable

# Set Flutter global version to stable
fvm global stable

# Update PATH environment variable to point to the FVM-managed Flutter SDK
export PATH="$HOME/fvm/default/bin:$PATH"

# Run flutter doctor
flutter doctor

